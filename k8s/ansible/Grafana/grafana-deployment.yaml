---
- name: Deploy Monitoring Stack (Prometheus + Grafana)
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Ensure namespace "eschool" exists
      shell: kubectl create namespace eschool --dry-run=client -o yaml | kubectl apply -f - --kubeconfig /home/ubuntu/.kube/config

    - name: Create Grafana manifests
      copy:
        dest: /tmp/grafana_stack.yml
        content: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: eschool
          ---
          # ConfigMap для provisioning дашбордів
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: grafana-dashboards-provision
            namespace: eschool
            labels:
              grafana_dashboard: "1"
          data:
            dashboards.yaml: |
              apiVersion: 1
              providers:
                - name: 'sidecar'
                  orgId: 1
                  folder: ''
                  type: file
                  disableDeletion: false
                  editable: true
                  updateIntervalSeconds: 10
                  options:
                    path: /tmp/dashboards
          ---
          # ConfigMap з кастомним дашбордом
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: custom-dashboard
            namespace: eschool
            labels:
              grafana_dashboard: "1"
          data:
            node-overview.json: |
              {
                "id": null,
                "title": "Node Overview (Custom)",
                "panels": [
                  {
                    "type": "gauge",
                    "title": "CPU Usage (%)",
                    "targets": [
                      { "expr": "100 - (avg by(instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)" }
                    ]
                  },
                  {
                    "type": "gauge",
                    "title": "Memory Usage (%)",
                    "targets": [
                      { "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100" }
                    ]
                  }
                ]
              }
          ---
          # ConfigMap для Prometheus datasource
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: grafana-datasources
            namespace: eschool
          data:
            prometheus.yaml: |
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  access: proxy
                  url: http://prometheus-server:9090
                  isDefault: true
          ---
          # Deployment Grafana
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: grafana
            namespace: eschool
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: grafana
            template:
              metadata:
                labels:
                  app: grafana
              spec:
                containers:
                  - name: grafana
                    image: grafana/grafana:10.0.6
                    ports:
                      - containerPort: 3000
                    env:
                      - name: GF_SECURITY_ADMIN_USER
                        value: admin
                      - name: GF_SECURITY_ADMIN_PASSWORD
                        value: admin
                    volumeMounts:
                      - name: dashboards
                        mountPath: /tmp/dashboards
                      - name: dashboards-provision
                        mountPath: /etc/grafana/provisioning/dashboards
                      - name: grafana-datasources
                        mountPath: /etc/grafana/provisioning/datasources
                volumes:
                  - name: dashboards
                    configMap:
                      name: custom-dashboard
                  - name: dashboards-provision
                    configMap:
                      name: grafana-dashboards-provision
                  - name: grafana-datasources
                    configMap:
                      name: grafana-datasources
          ---
          # Service Grafana
          apiVersion: v1
          kind: Service
          metadata:
            name: grafana
            namespace: eschool
          spec:
            type: ClusterIP
            ports:
              - port: 3000
                targetPort: 3000
                protocol: TCP
                name: http
            selector:
              app: grafana

    - name: Apply Grafana manifests
      shell: kubectl apply -f /tmp/grafana_stack.yml --kubeconfig /home/ubuntu/.kube/config

    - name: Add Prometheus Helm repo
      shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      register: prometheus_repo
      changed_when: "'has been added' in prometheus_repo.stdout or 'already exists' in prometheus_repo.stdout"

    - name: Update Helm repos
      shell: helm repo update

    - name: Install/Upgrade Prometheus via Helm
      shell: |
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
          --namespace eschool --create-namespace \
          --set server.persistentVolume.enabled=false \
          --set nodeExporter.enabled=true
